{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/components/Project/ProjectActions.tsx","webpack:///external \"ReactRedux\"","webpack:///external \"Redux\"","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./node_modules/redux-thunk/es/index.js","webpack:///./src/components/TaskDetail/TaskDetailReducer.tsx","webpack:///./src/components/Project/Project.tsx","webpack:///./src/components/Project/ProjectBox.tsx","webpack:///./src/Reducer/ReducerContainer.tsx","webpack:///./src/components/Project/ProjectReducer.tsx","webpack:///./src/components/TaskIssue/TaskIssueReducer.tsx","webpack:///./src/components/TaskDetail/TaskDetail.tsx","webpack:///./src/components/TaskIssue/ProjectTask.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","FETCH_POST","SET_TASK_ISSUE","SET_CURRENT_TASK","setTaskIssues","dispatch","tasks","type","payload","setCurrentTask","task","fetchPost","fetch","then","res","json","posts","error","console","ReactRedux","Redux","store","createStore","Reducer","applyMiddleware","log","getState","ReactDOM","render","Provider","document","getElementById","createThunkMiddleware","extraArgument","_ref","next","action","thunk","withExtraArgument","state","connector","connect","projects","taskIssues","fetchData","Project","Component","project","boxs","projectNum","length","titleName","push","title","this","props","task_issues","className","id","CreateProjectBox","ProjectBox","combineReducers","ProjectReducer","TaskIssueReducer","taskDetail","TaskDetailReducer","initialState","pAction","taskdetail","TaskDetail","ShowDetailPage","ProjectTask","super","ListDomOnclick","flat_task_list","issue_list","taskLength","taskClassName","layer","onClick","data_task_id","deadline","accomplish_percentage","issue_person","expands","dependentTask","CreateTaskIssue","concat","e","preventDefault","taskID","currentTarget","attributes","getNamedItem","selectedTask","find","x"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = React;","import {TaskIssueType, ProjectType} from \"./ProjectReducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport const FETCH_POST = \"FETCH_POST\";\r\nexport const SET_TASK_ISSUE = \"SET_TASK_ISSUE\";\r\nexport const SET_CURRENT_TASK = \"SET_CURRENT_TASK\";\r\n\r\nexport const setTaskIssues = (dispatch : Dispatch, tasks: TaskIssueType[]) => {\r\n    dispatch({\r\n        type : SET_TASK_ISSUE,\r\n        payload : tasks\r\n    });\r\n}\r\n\r\nexport const setCurrentTask = (dispatch : Dispatch, task : TaskIssueType) => {\r\n    dispatch({\r\n        type : SET_CURRENT_TASK,\r\n        payload : task\r\n    })\r\n  }\r\n\r\nexport const fetchPost = (dispatch : Dispatch) => {\r\n    try {\r\n        fetch(\"./dataset/fake_tasks.json\")\r\n        .then(res => res.json())\r\n        .then(posts => {\r\n\r\n            dispatch({\r\n                type : FETCH_POST,\r\n                payload : posts\r\n            })\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\ninterface GetProjectActionType {\r\n    type: string,\r\n    payload: ProjectType[]\r\n}\r\n\r\ninterface GetTaskIssueActionType {\r\n    type: string,\r\n    payload: TaskIssueType[]\r\n}\r\n\r\ninterface SetTaskDetailActionType {\r\n    type: string,\r\n    payload: TaskIssueType\r\n}\r\n\r\nexport type ProjectActionType = GetProjectActionType;\r\nexport type TaskIssueActionType = GetTaskIssueActionType;\r\nexport type TaskDetailActionType = SetTaskDetailActionType;","module.exports = ReactRedux;","module.exports = Redux;","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {Hello} from \"./components/Hello\";\r\nimport Project from \"./components/Project/Project\";\r\n\r\nimport {Reducer} from \"./Reducer/ReducerContainer\";\r\n\r\nimport './stylesheet/main.scss';\r\n\r\nconst store = createStore(Reducer, {}, applyMiddleware(thunkMiddleware));\r\n\r\nconsole.log(store.getState());\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    <div><Project/></div>\r\n    </Provider>,\r\n\r\n    document.getElementById(\"dateline_app\")\r\n)","module.exports = ReactDOM;","function createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\nexport default thunk;","import {TaskIssueType} from \"../Project/ProjectReducer\";\r\nimport {SET_CURRENT_TASK, TaskDetailActionType} from \"../Project/ProjectActions\";\r\n\r\nconst initialState : TaskIssueType = null;\r\n\r\nexport function TaskDetailReducer(state = initialState, action : TaskDetailActionType ) : TaskIssueType {\r\n    switch (action.type) {\r\n        case SET_CURRENT_TASK:\r\n          return action.payload;\r\n    }\r\n\r\n    return state;\r\n}","import * as React from \"react\";\r\nimport ProjectBox from \"./ProjectBox\";\r\nimport {RooterReducerType} from \"../../Reducer/ReducerContainer\";\r\nimport {ProjectType, TaskIssueType} from \"./ProjectReducer\";\r\n\r\nimport {fetchPost,setTaskIssues} from \"./ProjectActions\";\r\nimport ProjectTask from \"../TaskIssue/ProjectTask\";\r\nimport TaskDetail from \"../TaskDetail/TaskDetail\";\r\n\r\n\r\nimport {Dispatch} from \"redux\";\r\n\r\nimport {connect, ConnectedProps } from 'react-redux';\r\n\r\nconst mapDispatch = (dispatch : Dispatch) => {\r\n    return {\r\n        fetchData : () => (fetchPost(dispatch)),\r\n        setTaskIssues : (task : TaskIssueType[]) => (setTaskIssues(dispatch, task))\r\n    }\r\n}\r\n\r\nconst mapState = (state: RooterReducerType) => ({\r\n    projects: state.projects,\r\n    task : state.taskIssues\r\n});\r\n\r\nconst connector = connect(\r\n    mapState,\r\n    mapDispatch\r\n);\r\n\r\n// The inferred type will look like:\r\n// {isOn: boolean, toggleOn: () => void}\r\ntype PropsFromRedux = ConnectedProps<typeof connector>  \r\n  \r\nclass Project extends React.Component<PropsFromRedux> {\r\n\r\n    CreateProjectBox(project : ProjectType[]) {\r\n        let boxs = [];\r\n\r\n        let projectNum = project.length;\r\n\r\n        for (let i = 0; i < projectNum; i++) {\r\n            let titleName = \"Project name \" + (project[i].name);\r\n            boxs.push(<ProjectBox title={titleName} />);\r\n        }\r\n\r\n        if (projectNum > 0) {\r\n            this.props.setTaskIssues(project[0].task_issues);\r\n        }\r\n\r\n        return boxs;\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.fetchData();\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <div className=\"container\">\r\n                <div className=\"columns\">\r\n                    <div id=\"project_main\"  className=\"column \">\r\n                        {this.CreateProjectBox(this.props.projects)}\r\n                    </div>\r\n\r\n                    <div className=\"column is-four-fifths\">\r\n                        <ul>\r\n                            <ProjectTask/>\r\n                        </ul>\r\n                    </div>\r\n            \r\n                    <div className=\"column\">\r\n                        <TaskDetail/>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n    }\r\n}\r\n\r\nexport default connector(Project)","import * as React from \"react\";\r\n\r\nexport interface ProjectBoxProp { title: string; }\r\n\r\nclass ProjectBox extends React.Component<ProjectBoxProp, {}> {\r\n\r\n    render() {\r\n        return <div className=\"project_box\">\r\n                <h2>{this.props.title}</h2>\r\n            </div>;\r\n    }\r\n}\r\n\r\nexport default ProjectBox;","import {combineReducers} from 'redux';\r\n\r\nimport {ProjectReducer, ProjectType, TaskIssueType} from '../components/Project/ProjectReducer';\r\n\r\nimport {TaskIssueReducer} from '../components/TaskIssue/TaskIssueReducer';\r\nimport {TaskDetailReducer} from '../components/TaskDetail/TaskDetailReducer';\r\n\r\nexport interface RooterReducerType{\r\n    projects : ProjectType[],\r\n    taskIssues : TaskIssueType[],\r\n    taskDetail : TaskIssueType\r\n}\r\n\r\nexport const Reducer = combineReducers({\r\n    projects : ProjectReducer,\r\n    taskIssues : TaskIssueReducer,\r\n    taskDetail : TaskDetailReducer\r\n});","import * as pAction from \"./ProjectActions\";\r\n\r\nexport interface TaskIssueType {\r\n    id : string,\r\n    name : string,\r\n    description : string,\r\n    layer : number,\r\n    issue_person? : string,\r\n    deadline? : string,\r\n    accomplish_percentage? : number,\r\n    weight? : number,\r\n    expands? : TaskIssueType[]\r\n};\r\n\r\nexport interface ProjectType {\r\n    id : string,\r\n    name : string,\r\n    task_issues : TaskIssueType[]\r\n};\r\n\r\nconst initialState : ProjectType[] = [];\r\n\r\nexport function ProjectReducer(state = initialState, action : pAction.ProjectActionType ) : ProjectType[] {\r\n\r\n    switch (action.type) {\r\n        case pAction.FETCH_POST:\r\n          return action.payload;\r\n    }\r\n\r\n    return state;\r\n}","import {TaskIssueType} from \"../Project/ProjectReducer\";\r\nimport {TaskIssueActionType, SET_TASK_ISSUE} from \"../Project/ProjectActions\";\r\n\r\nconst initialState : TaskIssueType[] = [];\r\n\r\nexport function TaskIssueReducer(state = initialState, action : TaskIssueActionType ) : TaskIssueType[] {\r\n\r\n    switch (action.type) {\r\n        case SET_TASK_ISSUE:\r\n          return action.payload;\r\n    }\r\n\r\n    return state;\r\n}","\r\nimport {TaskIssueType} from \"../Project/ProjectReducer\";\r\n\r\nimport * as React from \"react\";\r\nimport {RooterReducerType} from \"../../Reducer/ReducerContainer\";\r\n\r\nimport {Dispatch} from \"redux\";\r\nimport {connect, ConnectedProps } from 'react-redux';\r\n\r\nexport interface ProjectTaskType { task: TaskIssueType }\r\n\r\nconst mapDispatch = (dispatch : Dispatch) => {\r\n    return {\r\n    }\r\n}\r\n\r\ntype TaskProps = {\r\n    task: TaskIssueType,\r\n}\r\n  \r\nconst mapState = (state: RooterReducerType) => ({\r\n    taskdetail: state.taskDetail\r\n});\r\n\r\nconst connector = connect(\r\n    mapState,\r\n    null\r\n);\r\n\r\n// The inferred type will look like:\r\n// {isOn: boolean, toggleOn: () => void}\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n  \r\nclass TaskDetail extends React.Component<PropsFromRedux> {\r\n\r\n    ShowDetailPage(task : TaskIssueType) {\r\n        if (this.props.taskdetail == null) return '';\r\n\r\n        return <div className=\"detail_box\">\r\n            <p>Task ID : {task.id}\r\n                Task name : {task.name}\r\n            </p>\r\n\r\n            <form>\r\n                <textarea>Type any thing here</textarea>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            </div>\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <div id=\"task_detail\">\r\n            { \r\n                this.ShowDetailPage(this.props.taskdetail)\r\n            }\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default connector(TaskDetail)","\r\nimport {TaskIssueType} from \"../Project/ProjectReducer\";\r\n\r\nimport * as React from \"react\";\r\nimport {RooterReducerType} from \"../../Reducer/ReducerContainer\";\r\nimport {setCurrentTask} from \"../Project/ProjectActions\";\r\nimport {Dispatch} from \"redux\";\r\nimport {connect, ConnectedProps } from 'react-redux';\r\n\r\nconst mapDispatch = (dispatch : Dispatch) => {\r\n    return {\r\n        setCurrentTask : (task : TaskIssueType) => (setCurrentTask(dispatch, task))\r\n    }\r\n}\r\n\r\nconst mapState = (state: RooterReducerType) => ({\r\n    taskIssues: state.taskIssues\r\n});\r\n\r\nconst connector = connect(\r\n    mapState,\r\n    mapDispatch\r\n);\r\n\r\ndeclare module 'react' {\r\n    interface HTMLAttributes<T> {\r\n        data_task_id?: string\r\n    }\r\n}\r\n\r\n// The inferred type will look like:\r\n// {isOn: boolean, toggleOn: () => void}\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n  \r\nclass ProjectTask extends React.Component<PropsFromRedux> {\r\n    flat_task_list : TaskIssueType[];\r\n\r\n    constructor(props : PropsFromRedux) {\r\n        super(props);\r\n    \r\n        this.ListDomOnclick = this.ListDomOnclick.bind(this);\r\n        this.flat_task_list = [];\r\n      }\r\n\r\n    CreateTaskIssue(tasks : TaskIssueType[]) : JSX.Element[]{\r\n        let issue_list : JSX.Element[] = [];\r\n        let taskLength = tasks.length;\r\n\r\n        if (taskLength <= 0) {\r\n            issue_list.push(<p>No Task is assign to anyone</p>);\r\n            return issue_list;\r\n        }\r\n\r\n        for (let i = 0; i < taskLength; i++) {\r\n            let layerType = (tasks[i].layer === 0) ? 0 : 1;\r\n            let taskClassName = \"columns task_list_layer_\" + layerType;\r\n\r\n            issue_list.push(<li className={taskClassName} onClick={this.ListDomOnclick} data_task_id={tasks[i].id} >\r\n                <p className=\"column triangle-topleft\">{tasks[i].deadline}</p>\r\n                <p className=\"column is-three-fifths\">{tasks[i].name}</p>\r\n                <p className=\"column\">{tasks[i].accomplish_percentage +\", \" + tasks[i].issue_person} </p>\r\n\r\n            </li>);\r\n\r\n            if (tasks[i].expands.length > 0) {\r\n                let dependentTask = this.CreateTaskIssue(tasks[i].expands);\r\n                issue_list = issue_list.concat(dependentTask);    \r\n            }\r\n\r\n            this.flat_task_list.push(tasks[i]);\r\n        }\r\n        \r\n        return issue_list;\r\n    }\r\n\r\n    ListDomOnclick(e:React.MouseEvent) {\r\n        e.preventDefault();\r\n        let taskID = e.currentTarget.attributes.getNamedItem(\"data_task_id\").value;\r\n\r\n        let selectedTask = this.flat_task_list.find(x=> x.id==taskID);\r\n        if (selectedTask != null) {\r\n            console.log(selectedTask.id);\r\n            this.props.setCurrentTask(selectedTask);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.flat_task_list = [];\r\n    }\r\n    \r\n    render() {\r\n        return <div id=\"task_main\">\r\n            {this.CreateTaskIssue(this.props.taskIssues)}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default connector(ProjectTask)"],"sourceRoot":""}